<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_example_8cpp_source" xml:lang="en-US">
<title>example.cpp</title>
<indexterm><primary>lib/src/example.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_example_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;medkit/net/Network.hpp&gt;</emphasis>
<anchor xml:id="_example_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;medkit/steady.hpp&gt;</emphasis>
<anchor xml:id="_example_8cpp_source_1l00003"/>00003 
<anchor xml:id="_example_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;sys/socket.h&gt;</emphasis>
<anchor xml:id="_example_8cpp_source_1l00005"/>00005 
<anchor xml:id="_example_8cpp_source_1l00006"/><link linkend="_structSocketConnectionInfo">00006</link> <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structSocketConnectionInfo">SocketConnectionInfo</link>&#32;{
<anchor xml:id="_example_8cpp_source_1l00007"/><link linkend="_structSocketConnectionInfo_1a0988efabede8cf55e008e1dc109044f6">00007</link> &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>sockaddr*&#32;<link linkend="_structSocketConnectionInfo_1a0988efabede8cf55e008e1dc109044f6">addr</link>;
<anchor xml:id="_example_8cpp_source_1l00008"/><link linkend="_structSocketConnectionInfo_1ab089c7e77237d04cb5e1bec7134ef696">00008</link> &#32;&#32;socklen_t&#32;<link linkend="_structSocketConnectionInfo_1ab089c7e77237d04cb5e1bec7134ef696">addrlen</link>;
<anchor xml:id="_example_8cpp_source_1l00009"/>00009 };
<anchor xml:id="_example_8cpp_source_1l00010"/>00010 
<anchor xml:id="_example_8cpp_source_1l00011"/><link linkend="_example_8cpp_1ae6665db702f7f374879e1ccb5042c031">00011</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_example_8cpp_1ae6665db702f7f374879e1ccb5042c031">SocketHandle</link>;
<anchor xml:id="_example_8cpp_source_1l00012"/>00012 
<anchor xml:id="_example_8cpp_source_1l00013"/>00013 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespacemedkit_1ae84f11154d20f258f62c4edd432cae81">medkit::Result</link>;<emphasis role="comment"></emphasis>
<anchor xml:id="_example_8cpp_source_1l00014"/>00014 <emphasis role="comment">/**</emphasis>
<anchor xml:id="_example_8cpp_source_1l00015"/>00015 <emphasis role="comment">&#32;*&#32;uses&#32;the&#32;Unix&#32;TCP&#32;socket&#32;to&#32;implement&#32;a&#32;medkit-compliant</emphasis>
<anchor xml:id="_example_8cpp_source_1l00016"/>00016 <emphasis role="comment">&#32;*&#32;network&#32;object</emphasis>
<anchor xml:id="_example_8cpp_source_1l00017"/>00017 <emphasis role="comment">&#32;*/</emphasis>
<anchor xml:id="_example_8cpp_source_1l00018"/>00018 <emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_example_8cpp_source_1l00019"/><link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4">00019</link> <emphasis role="keyword">struct&#32;</emphasis><link linkend="_structmedkit_1_1NetworkInterfaceTrait">medkit::NetworkInterfaceTrait</link>&lt;<link linkend="_example_8cpp_1ae6665db702f7f374879e1ccb5042c031">SocketHandle</link>,&#32;<link linkend="_structSocketConnectionInfo">SocketConnectionInfo</link>&gt;&#32;{
<anchor xml:id="_example_8cpp_source_1l00020"/><link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1adca9c0701bb4b4c35fa88dadd82c1cb0">00020</link> &#32;&#32;<link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1adca9c0701bb4b4c35fa88dadd82c1cb0">NetworkInterfaceTrait</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;fd_)&#32;:&#32;fd&#32;(fd_)&#32;{}
<anchor xml:id="_example_8cpp_source_1l00021"/><link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1a7d9c63a9b1e6f89b2948ad948201dd4a">00021</link> &#32;&#32;<link linkend="_namespacemedkit_1ae84f11154d20f258f62c4edd432cae81">Result</link>&#32;<link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1a7d9c63a9b1e6f89b2948ad948201dd4a">connect</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structSocketConnectionInfo">SocketConnectionInfo</link>&amp;&#32;conn_info)&#32;{
<anchor xml:id="_example_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacemedkit_1ae84f11154d20f258f62c4edd432cae81acb44411c897094df208bb9112124067d">Result::Success</link>;
<anchor xml:id="_example_8cpp_source_1l00023"/>00023 &#32;&#32;}
<anchor xml:id="_example_8cpp_source_1l00024"/><link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1aecd7d1c7357f0f45d3abe8260ab64f4e">00024</link> &#32;&#32;<link linkend="_namespacemedkit_1ae84f11154d20f258f62c4edd432cae81">Result</link>&#32;<link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1aecd7d1c7357f0f45d3abe8260ab64f4e">send</link>(<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;data,&#32;uint32_t&#32;len)&#32;{
<anchor xml:id="_example_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacemedkit_1ae84f11154d20f258f62c4edd432cae81acb44411c897094df208bb9112124067d">Result::Success</link>;
<anchor xml:id="_example_8cpp_source_1l00026"/>00026 &#32;&#32;}
<anchor xml:id="_example_8cpp_source_1l00027"/><link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1a6422a00f220d5b3fe814908cd3d80743">00027</link> &#32;&#32;<link linkend="_namespacemedkit_1ae84f11154d20f258f62c4edd432cae81">Result</link>&#32;<link linkend="_structmedkit_1_1NetworkInterfaceTrait_3_01SocketHandle_00_01SocketConnectionInfo_01_4_1a6422a00f220d5b3fe814908cd3d80743">read</link>(uint8_t*&#32;memory,&#32;uint32_t&#32;n,&#32;uint32_t*&#32;len)&#32;{
<anchor xml:id="_example_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacemedkit_1ae84f11154d20f258f62c4edd432cae81acb44411c897094df208bb9112124067d">Result::Success</link>;
<anchor xml:id="_example_8cpp_source_1l00029"/>00029 &#32;&#32;}
<anchor xml:id="_example_8cpp_source_1l00030"/>00030 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_example_8cpp_source_1l00031"/>00031 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd;
<anchor xml:id="_example_8cpp_source_1l00032"/>00032 };
<anchor xml:id="_example_8cpp_source_1l00033"/>00033 
<anchor xml:id="_example_8cpp_source_1l00034"/><link linkend="_example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00034</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()&#32;{
<anchor xml:id="_example_8cpp_source_1l00035"/>00035 &#32;&#32;<emphasis role="comment">/*&#32;TODO:&#32;show&#32;authorization&#32;stage&#32;*/</emphasis>
<anchor xml:id="_example_8cpp_source_1l00036"/>00036 
<anchor xml:id="_example_8cpp_source_1l00037"/>00037 &#32;&#32;uint32_t&#32;selected_param&#32;=&#32;1;
<anchor xml:id="_example_8cpp_source_1l00038"/>00038 
<anchor xml:id="_example_8cpp_source_1l00039"/>00039 &#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespacemedkit_1_1steady">medkit::steady</link>;
<anchor xml:id="_example_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;
<anchor xml:id="_example_8cpp_source_1l00041"/>00041 &#32;&#32;<link linkend="_structmedkit_1_1steady_1_1Request">medkit::steady::Request</link>&#32;set_req;
<anchor xml:id="_example_8cpp_source_1l00042"/>00042 &#32;&#32;{
<anchor xml:id="_example_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_structmedkit_1_1steady_1_1Request">medkit::steady::Request</link>;
<anchor xml:id="_example_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;set_req.<link linkend="_structmedkit_1_1steady_1_1Request_1a6f4700ecbc619612e8a5b1d553a61e50">type</link>&#32;=&#32;<link linkend="_structmedkit_1_1steady_1_1Request_1ac2e44d78b6c325d1217f4ba688086e4fa62382f051b033a7760fe2b44568fef0e">Request::MessageType::SetParam</link>;
<anchor xml:id="_example_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;set_req.<link linkend="_structmedkit_1_1steady_1_1Request_1ae1fa8f28d3115b0598bd66104e538693">content</link>&#32;=&#32;<link linkend="_unionmedkit_1_1steady_1_1Request_1_1Content">Request::Content</link>&#32;{
<anchor xml:id="_example_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;.set_param&#32;=&#32;{
<anchor xml:id="_example_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;.param_handle&#32;=&#32;selected_param,
<anchor xml:id="_example_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;},
<anchor xml:id="_example_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;};
<anchor xml:id="_example_8cpp_source_1l00050"/>00050 &#32;&#32;}
<anchor xml:id="_example_8cpp_source_1l00051"/>00051 }
</programlisting></section>
